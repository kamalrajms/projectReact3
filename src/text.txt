## react intro

    What is React?

    1) React is a JavaScript library (not a framework) developed by Facebook (Meta) for building user interfaces (UIs), especially Single Page Applications (SPAs).

    2) It helps developers build reusable UI components that update efficiently when data changes.

    Instead of reloading a whole webpage when something changes, React updates only the parts of the UI that need to change.

    -------
    Why do we need React?

	It makes UI development faster, cleaner, and more efficient.

	Provides a better user experience with smooth updates without page reloads.

## structure

## import export
## styleing

    global files
    external files
    module.css files
    inline css
    object way styleing

## props
    
    props is nothing but drilling data from one component
    to another component

        passing data through props variable
        Destructuring of props

## usestate()

    usestate is a react hook that allows you to add state 
    (data that can change over time ) to a functional component.

    normally, in js ,variable disappear after the function runs.
    bur in react with usestate remembers values between re-renders.

    syntax:

        const[state,setState]=usestate(initial value)

        state-current value
        setState-to updating the current value
        initial value-starting value

## conditional rendering & list rendering

    conditional rendering

        conditional rendering means showing or hiding parts of UI
        based on some condition.

        ternary-operator
        logical operator


    list rendering

        rendering multiple items dynamically useing .map() , reducer(), find()...

## useEffect()

    in react, useEffect is a hook that lets you perform 
    side useEffectin function component.
    side effects are the taske happend outsides the normal react rendering process,

        Fetching datas from API
        updating the browser  Dom manually
        starting/stoping timers

    useEffect(()=>{
        //code
    },[dependency,developed 2,dependency 3])

## useRef()

    useref is a react hook that gives you a box(.current) you can store
    anything in -num,str,obj,fun,,even DOM element...

    that values persist between rendering

    updating it does not causes your compoonent to re-render.

## useContext()

    passing data from a parent component down to deeply nested child component is annoying

    normally , you'd have to pass props manually through each level (called props drilling)

    useContext lets ou skip all the middle components and share daya directly


            # create a context
            # Provider  a value
            # consume the value

## useReducer()

    const[state,dispatch]=useReducer(reducerFunction,initialValue)

    state-- current variable (like usestate)
    dispatch-- a function to tell the reducer what to do
    reducerFunction-- the logic that returns a new state
    initialValue-- starting value